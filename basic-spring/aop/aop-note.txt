1、aop解决的问题
    -代码混乱：可以使得代码中只包含业务逻辑，不用兼顾其它非业务代码处理。
    -代码分散：如果日志模块发生了变化，只用更改aop的类即可，不许用更改所有添加日志的模块。
2、aop术语
    切面(aspect)：横切关注点，被模块化的特殊对象。即切面类。
    通知(advice)：切面必须要完成的工作。即切面的方法。
    目标(target)：被通知的对象。
    代理(proxy)：向目标对象应用通知后创建的对象。
    连接点(joinpoint)：程序执行的某个特定位置。即某个方法执行前或后等。使用连接点获取方法的信息。
    切点(pointcut)：每个类都拥有多个连接点。通过切点来查找连接点。
    具体查看com.xyb.aspject.cutFace.LoggingAspect。
3、AspectJ：java社区里最完成最流行的aop框架。
4、步骤：
    -除了基础jar包外，加入4个aspject相关jar包。
    -在xml中加入aop命名空间，且加入扫描aspject的配置。
